#ifndef _BUTTON_H
#define _BUTTON_H


#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "imu.h"

/* pins */
#define PIN_MUX           PA_4
#define PIN_S0            PA_8
#define PIN_S1            PA_9
#define PIN_S2            PA_10

/*  OLED informations */
#define SCREEN_WIDTH  128
#define SCREEN_HEIGHT 64
#define OLED_ADDR     0x3C
#define OLED_RESET    -1

/* menu state */
#define L_1     1     // Match Gameplay
#define L_1_1   11    // Regional KRI
#define L_1_1_A 110   // Play
#define L_1_2   12    // Nasional KRI
#define L_1_2_A 120   // Play

#define L_2     2     // Select Pose

#define L_3     3     // Sequential

#define L_4     4     // Turn Off
#define L_4_A   40    // Play

/* game state */
#define REGIONAL_KRI  110
#define NATIONAL_KRI  120
#define TURN_OFF      40

/* button name */
#define UP_ARROW          7
#define RIGHT_ARROW       5
#define DOWN_ARROW        4
#define LEFT_ARROW        6
#define A_BUTTON          3
#define B_BUTTON          0
#define C_BUTTON          1
#define D_BUTTON          2

/* time constants */
#define DEBOUNCE_MS     10
#define BUTTON_HOLD_MS  1500

/* button action */
#define BUTTON_NONE   0
#define BUTTON_A      1
#define BUTTON_B      2
#define BUTTON_C      3
#define BUTTON_D      4
#define BUTTON_UP     5
#define BUTTON_RIGHT  6
#define BUTTON_DOWN   7
#define BUTTON_LEFT   8



/* button controller */
class ButtonActionControl {


private:

  /* members */
  uint8_t   button_action       = BUTTON_NONE,
            button_pressed_cnt  = 0;
            
  uint16_t  display_menu        = L_1;

  uint64_t  start_time,
            hold_time,
            debounce_time       = 0;
            
  int       num_button = 0;

  bool      refresh_display     = true,
            button_down         = false,
            button_state[8]     = {0};

  int    button_msg          = 0;

  bool      reset            = false;


public:

  /* oled object */
  Adafruit_SSD1306 display = Adafruit_SSD1306(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

  /* constructor and destructor */
  ButtonActionControl();
  ~ButtonActionControl();

  /* initializer */
  void begin(IMUControl* imu_controller);

  /* methods */
  void buttonEvent();
  void displayEvent();
  void actionController();
  void buttonService();
  void send();
};



/* definitions for bitmap displaying purposes */
#define LOGO_HEIGHT     64
#define LOGO_WIDTH      64
#define BITMAP_HEIGHT   128
#define BITMAP_WIDTH    50

/* bitmaps */
static const unsigned char ALFAROBI_LOGO[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0xF8, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0, 0x8F, 0xC0, 0x00, 0x00,
  0x00, 0x00, 0x03, 0xE4, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xCB, 0x87, 0xC0, 0x00, 0x00,
  0x00, 0x00, 0x07, 0xC7, 0xD7, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xD7, 0x97, 0xC0, 0x00, 0x00,
  0x00, 0x00, 0x3F, 0xC7, 0x57, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xCB, 0x87, 0xFC, 0x00, 0x00,
  0x00, 0x00, 0x7F, 0xE4, 0x2F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF1, 0x8F, 0xFC, 0x00, 0x00,
  0x00, 0x00, 0x7F, 0xF8, 0x3F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00,
  0x00, 0x00, 0x47, 0x7F, 0xFF, 0xE2, 0x00, 0x00, 0x00, 0x00, 0x41, 0xFF, 0xFF, 0x82, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x7F, 0xFC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0F, 0xF0, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x03, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x47, 0xFF, 0xFF, 0xE2, 0x00, 0x00, 0x00, 0x00, 0x47, 0xFF, 0xFF, 0xC2, 0x00, 0x00,
  0x00, 0x00, 0x47, 0xFF, 0xFF, 0xE2, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x40, 0x7F, 0xFE, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x7F, 0xFE, 0x02, 0x00, 0x00, 0x00, 0x00, 0x60, 0x7F, 0xFE, 0x06, 0x00, 0x00,
  0x00, 0x00, 0x20, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x1C, 0x00, 0x00,
  0x00, 0x00, 0x30, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x1C, 0x00, 0x00,
  0x00, 0x00, 0x30, 0x3F, 0xF8, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x30, 0x3F, 0xF8, 0x1C, 0x00, 0x00,
  0x00, 0x00, 0x30, 0x3F, 0xF8, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x18, 0x00, 0x00,
  0x00, 0x00, 0x1C, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xE0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0x07, 0xCF, 0x1E, 0x3E, 0x7C, 0x80,
  0x01, 0xFA, 0x07, 0xDF, 0xBF, 0x7E, 0x7C, 0x80, 0x01, 0x0A, 0x04, 0x10, 0xA1, 0x62, 0x44, 0x80,
  0x01, 0xFA, 0x07, 0xDF, 0xBF, 0x62, 0x7C, 0x80, 0x01, 0xFA, 0x04, 0x1F, 0xBE, 0x62, 0x46, 0x80,
  0x01, 0x0B, 0xF4, 0x10, 0xB3, 0x7E, 0x7E, 0x80, 0x01, 0x0B, 0xF4, 0x10, 0xA1, 0x3E, 0x7C, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


#endif
